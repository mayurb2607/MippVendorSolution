@model MippSamplePortal.Models.Workorder

@{
    ViewData["Title"] = "Edit";
    var id = ViewData["VendorId"];
    var email = ViewBag.Email;
    var workorderId = ViewBag.Id;
    var clientId = ViewBag.clientId;
    var descriptions = ViewBag.Descriptions;
    var status = "";

}

<h1>Edit</h1>

<h4>Workorder</h4>
<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.OrderNumber)
        @Html.HiddenFor(model => model.OrderDate)
        <div class="form-group">
            @Html.LabelFor(model => model.AssignedTo, htmlAttributes: new { @class = "control-label col-md-2" })

            <div class="col-md-10">
                @Html.EditorFor(model => model.AssignedTo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AssignedTo, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.AssignedToCompany)
        @Html.HiddenFor(model => model.AssignedToAddress)
        @Html.HiddenFor(model => model.AssignedToEmailAddress)
        @Html.HiddenFor(model => model.ExpectedStartDate)
        @Html.HiddenFor(model => model.ExpectedEndDate)
        @Html.HiddenFor(model => model.ServiceRequestNumber)
        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>
        @Html.HiddenFor(model => model.Description)
        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalComments, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdditionalComments, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalComments, "", new { @class = "text-danger" })
            </div>
        </div>
       
        @Html.HiddenFor(model => model.ExpectedNoOfHoursToComplete)
        @Html.HiddenFor(model => model.WorkPerformedBy)
        @Html.HiddenFor(model => model.WorkCompletedAndMaterialsUsed)
        @Html.HiddenFor(model => model.TotalHoursSpent)
        @Html.HiddenFor(model => model.PropertyName)
        @Html.HiddenFor(model => model.PropertyAddress)
        @Html.HiddenFor(model => model.PropertyManager)
        @Html.HiddenFor(model => model.PropertyManagerPhone)
        @Html.HiddenFor(model => model.PropertyManagerEmail)
        @Html.HiddenFor(model => model.TenantName)
        @Html.HiddenFor(model => model.TenantEmailAddress)
        @Html.HiddenFor(model => model.TenantPhoneNumber)
        @Html.HiddenFor(model => model.UnitName)
        @Html.HiddenFor(model => model.UnitAddress)
        @Html.HiddenFor(model => model.Note)
        @Html.HiddenFor(model => model.PreferredTime)
        @Html.HiddenFor(model => model.EnterCondition)
        @Html.HiddenFor(model => model.PermissionNote)
        @Html.HiddenFor(model => model.EntryDate)
        @Html.HiddenFor(model => model.TimeEntered)
        @Html.HiddenFor(model => model.TimeDeparted)
        @Html.HiddenFor(model => model.EntryNote)
        @Html.HiddenFor(model => model.WorkorderCompiledBy)
        @Html.HiddenFor(model => model.WorkorderApprovedBy)
        @Html.HiddenFor(model => model.DateOfApproval)
        @Html.HiddenFor(model => model.Priority)
        @Html.HiddenFor(model => model.CostOfLabor)
        @Html.HiddenFor(model => model.CostOfMaterials)
        @Html.HiddenFor(model => model.TaxesPaid)
        @Html.HiddenFor(model => model.Total)
        @Html.HiddenFor(model => model.ClientId)
        @Html.HiddenFor(model => model.VendorId)



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="descriptions">
    @foreach (var description in descriptions)
    {
        <div class="row d-flex ml-lg-2 ml-sm-1" id="description" style="display: flex;">
            <div class="form-group" style="width: max-content; display:none">
                <label class="control-label">Id: </label>
                <input value="@description.Id" id="idText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;" />
            </div>
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Work completed & Materials used: </label>
                <input value="@description.DescriptionOfWorkToComplete" id="descriptionText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;" />
            </div>
            
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Expected Hours to Complete: </label>
                <input value="@description.ExpectedHours" class="form-control" id="hoursText" style="background-color:white; display:inline; margin-left: 1%; width: 83%;" />
            </div>
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Work completed & Materials used: </label>
                <textarea  id="commentText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;">@description.AdditionalComment</textarea> 
            </div>
        </div>

    }
    <div class="row d-flex ml-lg-2 ml-sm-1" id="description" style="display: flex;">
            <div class="form-group" style="width: max-content; display:none">
                <label class="control-label">Id: </label>
                <input  id="idText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;" />
            </div>
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Work completed & Materials used: </label>
                <input  id="descriptionText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;" />
            </div>
            
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Expected Hours to Complete: </label>
                <input class="form-control" id="hoursText" style="background-color:white; display:inline; margin-left: 1%; width: 83%;" />
            </div>
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Work completed & Materials used: </label>
                <textarea  id="commentText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;"></textarea> 
            </div>
        <button id="add-row-btn" onclick="AddLine()" class="btn btn-primary" style="    width: fit-content;
    height: fit-content;
    margin-top: 3%;">
                Add
            </button>&nbsp;&nbsp;
        <button id="remove-btn" onclick="RemoveLine()" class="btn btn-primary" style="    width: fit-content;
    height: fit-content;
    margin-top: 3%;">
                Delete
            </button>&nbsp;&nbsp;
        <button id="save-row-btn" onclick="SaveDescription()" class="btn btn-primary" style="    width: fit-content;
    height: fit-content;
    margin-top: 3%;">
                Save
            </button>
    </div>

</div>









@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function AddLine() {
            var newRow = `<div class="form-group" style="width: max-content; display:none">
                <label class="control-label">Id: </label>
                <input  id="idText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;" />
            </div>
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Work completed & Materials used: </label>
                <input  id="descriptionText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;" />
            </div>
            
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Expected Hours to Complete: </label>
                <input class="form-control" id="hoursText" style="background-color:white; display:inline; margin-left: 1%; width: 83%;" />
            </div>
            <div class="form-group" style="width: max-content;">
                <label class="control-label">Work completed & Materials used: </label>
                <textarea  id="commentText" class="form-control" style="background-color:white; display:inline;margin-left: 1%; width: 62%;"></textarea> 
            </div>
        <button id="add-row-btn" onclick="AddLine()" class="btn btn-primary" style="    width: fit-content;
    height: fit-content;
    margin-top: 3%;">
                Add
            </button>&nbsp;&nbsp;
        <button id="remove-btn" onclick="RemoveLine()" class="btn btn-primary" style="    width: fit-content;
    height: fit-content;
    margin-top: 3%;">
                Delete
            </button>&nbsp;&nbsp;
        <button id="save-row-btn" onclick="SaveDescription()" class="btn btn-primary" style="    width: fit-content;
    height: fit-content;
    margin-top: 3%;">
                Save
            </button>
        `;
            $("#descriptions").append(newRow);


        }
        function RemoveLine() {
            document.getElementById("descriptions").removeChild(document.getElementById("descriptions").children[1]);
        }

        function SaveDescription() {
            var descriptions = document.querySelectorAll("#descriptionText");
            var hours = document.querySelectorAll("#hoursText");
            console.log("564", descriptions);
            console.log("565", hours);

            var testArr = [];

            for (let i = 0; i < document.querySelectorAll("#descriptionText").length; i++) {
                if (document.querySelectorAll("#idText")[i] == null || document.querySelectorAll("#idText")[i] == undefined || document.querySelectorAll("#idText")[i] == "") {
                    testArr.push({
                        Id: -1,
                        DescriptionOfWorkToComplete: document.querySelectorAll("#descriptionText")[i].value,
                        ExpectedHours: document.querySelectorAll("#hoursText")[i].value,
                        AdditionalComment: document.querySelectorAll("#commentText")[i].value,
                        WorkorderId: @workorderId,
                        IsDelete: false,
                        CreatedBy: "",
                        ModifideBy:"",
                        CreatedAt: null,
                        ModifiedAt: null
                        });
                }
                testArr.push({
                    Id: document.querySelectorAll("#idText")[i].value,
                    DescriptionOfWorkToComplete: document.querySelectorAll("#descriptionText")[i].value,
                    ExpectedHours: document.querySelectorAll("#hoursText")[i].value,
                    AdditionalComment: document.querySelectorAll("#commentText")[i].value,
                    WorkorderId: @workorderId,
                    IsDelete: false,
                    CreatedBy: "",
                    ModifideBy:"",
                    CreatedAt: null,
                    ModifiedAt: null
                    });
            }
            console.log(testArr);

            $.post('@Url.Action("PostWorkorderTasks","Workorder")', { workorderTasks: testArr },
                function () {
                    showNotification('success', 'Workorder description updated!');
                }).fail(function(response){
                    showNotification('warning', response)
                });

        }

        function showNotification(type, message) {
            $.notify(message, type);
        }

</script>
}








